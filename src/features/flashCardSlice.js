// Import the 'createSlice' function from the '@reduxjs/toolkit' package.
import { createSlice } from "@reduxjs/toolkit";

// Define the initial state of the flashcard slice.
const initialState = {
  flashcards: [],
};

// Create a slice of the Redux store called 'flashcardSlice'.
const flashcardSlice = createSlice({
  name: "flashcard", // Name of the slice, used in actions and reducers.
  initialState, // Initial state for the slice.
  reducers: {
    // Reducer function to add a new flashcard to the state.
    addFlashcard: (state, action) => {
      // When the 'addFlashcard' action is dispatched, this reducer is called.
      // It receives the 'state' and the 'action' payload as arguments.
      // The new flashcard object is pushed to the 'flashcards' array in the state.
      state.flashcards.push(action.payload);
    },
    // Other reducer functions can be defined here if needed.
    // They will be used to update the state based on different actions.
    // For example, you can have a 'removeFlashcard' reducer to remove a flashcard from the state.
  },
});

// Export a selector function to retrieve all flashcards from the state.
// This function is used to access the 'flashcards' array from the Redux store.
export const selectAll = (state) => state.flashcard.flashcards;

// Export the 'addFlashcard' action from the slice.
// This action can be dispatched to add a new flashcard to the state.
export const { addFlashcard } = flashcardSlice.actions;

// Export the reducer function generated by the slice.
// This reducer will handle all actions defined in the 'reducers' object.
export default flashcardSlice.reducer;
